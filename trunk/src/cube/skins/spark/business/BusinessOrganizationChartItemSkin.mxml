<?xml version="1.0" encoding="utf-8"?>
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" 
		xmlns:mx="library://ns.adobe.com/flex/mx"
		xmlns:supportClasses="cube.spark.components.supportClasses.*"
		xmlns:fb="http://ns.adobe.com/flashbuilder/2009"
		implements="cube.spark.components.supportClasses.IOrganizationChartItemSkin"
		creationComplete="skin_creationCompleteHandler(event)">
	<!-- host component -->
	<fx:Metadata>
		[HostComponent("cube.spark.components.supportClasses.OrganizationChartItem")]
	</fx:Metadata>
	<fx:Script>
		<![CDATA[
			import cube.spark.components.supportClasses.IOrganizationChartItemSkin;
			
			public function get entryPoint():HierarchicalConnector {
				return entryPointConnector;
			}
			
			public function get exitPoint():HierarchicalConnector {
				return exitPointConnector;
			}
		]]>
	</fx:Script>
	<fx:Script fb:purpose="styling">
		<![CDATA[ 
			import mx.events.FlexEvent;
			import cube.skins.spark.OrganizationChartItemButtonSkin;
			
			protected function skin_creationCompleteHandler(event:FlexEvent):void {
				hostComponent.addEventListener("collapsedChange", hostComponent_collapsedChangeHandler, false, 0, true);
			}
			
			protected function hostComponent_collapsedChangeHandler(event:Event):void {
				updateDisplayList(unscaledWidth, unscaledHeight);
			}
			
			/**
			 *  @private
			 */
			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number) : void
			{
				var cr:Number = getStyle("cornerRadius");
				
				cornerRadius = cr;
				openButton.setStyle("cornerRadius", cornerRadius);
				(openButton.skin as BusinessOrganizationChartItemButtonSkin).collapsed = hostComponent.collapsed;
				
				super.updateDisplayList(unscaledWidth, unscaledHeight);
			}
			
			[Bindable]
			private var cornerRadius:Number = 12;
		]]>        
	</fx:Script>
	<fx:Declarations>
		<supportClasses:HierarchicalConnector id="entryPointConnector" orientation="top" viewport="{this}" x="50%" y="0" />
		<supportClasses:HierarchicalConnector id="exitPointConnector" orientation="bottom" viewport="{this}" x="50%" y="{hostComponent.height}" />
	</fx:Declarations>
	<s:states>
		<s:State name="minimizedUp" stateGroups="up,minimized" />
		<s:State name="normalUp" stateGroups="up,normal" />
		<s:State name="maximizedUp" stateGroups="up,maximized" />
		<s:State name="minimizedOver" stateGroups="over,minimized" />
		<s:State name="normalOver" stateGroups="over,normal" />
		<s:State name="maximizedOver" stateGroups="over,maximized" />
		<s:State name="minimizedDown" stateGroups="down,minimized" />
		<s:State name="normalDown" stateGroups="down,normal" />
		<s:State name="maximizedDown" stateGroups="down,maximized" />
		<s:State name="minimizedDisabled" stateGroups="disabled,minimized" />
		<s:State name="normalDisabled" stateGroups="disabled,normal" />
		<s:State name="maximizedDisabled" stateGroups="disabled,maximized" />
	</s:states>
	
	<s:Rect left="0" right="0" top="0" bottom="0" radiusX="{cornerRadius}" radiusY="{cornerRadius}" includeIn="maximized">
		<s:fill>
			<s:LinearGradient rotation="90">
				<s:GradientEntry color="#333333" ratio="0" alpha=".5"/>
				<s:GradientEntry color="#666666" ratio="1" alpha=".5"/>
			</s:LinearGradient>
		</s:fill>
	</s:Rect>
	
	<s:Rect left.maximized="15" right.maximized="15" top.maximized="15" bottom.maximized="15"
			radiusX="{cornerRadius}" radiusY="{cornerRadius}"
			left="0" right="0" top="0" bottom="0">
		<s:stroke>
			<s:SolidColorStroke color="#333333" alpha="1" />
		</s:stroke>
	</s:Rect>
	
	<s:Rect left.maximized="16" right.maximized="16" top.maximized="16" bottom.maximized="16"
			radiusX.maximized="{cornerRadius-1}" radiusY.maximized="{cornerRadius-1}"
			radiusX="{cornerRadius-2}" radiusY="{cornerRadius-2}"
			left="1" right="1" top="1" bottom="1">
		<s:fill>
			<s:SolidColor color="#ffffff" alpha="1" />
		</s:fill>
	</s:Rect>
	
	<s:Rect left.maximized="18" right.maximized="18" top.maximized="18" bottom.maximized="18"
			left="2" right="2" top="2" bottom="2"
			radiusX="{cornerRadius-3}" radiusY="{cornerRadius-3}">
		<s:fill>
			<s:SolidColor color="#333333" alpha="1" />
		</s:fill>
	</s:Rect>
	
	<s:Rect left.maximized="20" right.maximized="20" top.maximized="19" bottom.maximized="19" 
			left="4" right="4" top="3" bottom="3"
			radiusX="{cornerRadius-5}" radiusY="{cornerRadius-4}">
		<s:fill>
			<s:SolidColor color="#000000" alpha="1" />
		</s:fill>
	</s:Rect>
	
	<s:Rect left.maximized="22" right.maximized="22" top.maximized="20" bottom.maximized="20" includeIn="maximized"
			left="6" right="6" top="4" bottom="4"
			radiusX="{cornerRadius-6}" radiusY="{cornerRadius-5}">
		<s:fill>
			<s:LinearGradient rotation="90">
				<s:GradientEntry color="#999999" ratio="0" alpha="1"/>
				<s:GradientEntry color="#000000" ratio="1" alpha="1"/>
			</s:LinearGradient>
		</s:fill>
	</s:Rect>
	
	<s:Rect left.maximized="22" right.maximized="22" top.maximized="20" includeIn="maximized"
			left="6" right="6" top="4" height="22"
			topLeftRadiusX="{cornerRadius-6}" topRightRadiusX="{cornerRadius-6}" 
			topLeftRadiusY="{cornerRadius-5}" topRightRadiusY="{cornerRadius-5}">
		<s:fill>
			<s:LinearGradient rotation="90">
				<s:GradientEntry color="#666666" ratio="0" alpha="1"/>
				<s:GradientEntry color="#999999" ratio="1" alpha="1"/>
			</s:LinearGradient>
		</s:fill>
	</s:Rect>
	
	<s:Rect left.maximized="22" right.maximized="22" bottom.maximized="47" height="22" includeIn="maximized"
			left="6" right="6" bottom="47">
		<s:fill>
			<s:LinearGradient rotation="90">
				<s:GradientEntry color="#0f0f0f" ratio="0" alpha="1"/>
				<s:GradientEntry color="#2b2b2b" ratio="1" alpha="1"/>
			</s:LinearGradient>
		</s:fill>
	</s:Rect>
	
	<s:Rect left.maximized="22" right.maximized="22" bottom.maximized="43" height="4"
			left="6" right="6" bottom="28">
		<s:fill>
			<s:LinearGradient rotation="90">
				<s:GradientEntry color="#666666" ratio="0" alpha="1"/>
				<s:GradientEntry color="#333333" ratio="1" alpha="1"/>
			</s:LinearGradient>
		</s:fill>
	</s:Rect>
	
	<s:Rect left.maximized="22" right.maximized="22" bottom.maximized="41" height="2"
			left="6" right="6" bottom="26">
		<s:fill>
			<s:SolidColor color="#ff3300" alpha="1" />
		</s:fill>
	</s:Rect>
	
	<s:Rect left="142" right="42" top="52" height="1" includeIn="maximized">
		<s:fill>
			<s:SolidColor color="#ff9900" alpha="1" />
		</s:fill>
	</s:Rect>
	
	<s:Rect left="142" right="42" top="53" height="97" includeIn="maximized">
		<s:fill>
			<s:LinearGradient rotation="90">
				<s:GradientEntry color="#ff3300" ratio="0" alpha="1"/>
				<s:GradientEntry color="#696969" ratio="1" alpha="1"/>
			</s:LinearGradient>
		</s:fill>
	</s:Rect>
	
	<s:Rect left="43" top="52" width="98" height="98" includeIn="maximized">
		<s:fill>
			<s:SolidColor color="#ffffff" alpha="1" />
		</s:fill>
	</s:Rect>
	
	<mx:Image source="http://mlam83.files.wordpress.com/2007/10/bill-gates.thumbnail.jpg" width="98" height="98" left="43" top="52" includeIn="maximized" />
	
	<mx:DataGrid left="43" bottom="70" right="43" height="160" includeIn="maximized" />
	
	<s:Rect left="42" top="51" width="100" height="100" includeIn="maximized">
		<s:stroke>
			<s:SolidColorStroke color="#000000" alpha="1" />
		</s:stroke>
	</s:Rect>
	
	<s:Button id="openButton" left="2" right="2" height="24" bottom="2" focusEnabled="false"
			  left.maximized="20" right.maximized="20" bottom.maximized="19"
			  cornerRadius="{cornerRadius-4}"
			  skinClass="cube.skins.spark.business.BusinessOrganizationChartItemButtonSkin"
			  visible="{hostComponent.hasChildren}" />
	<s:Label id="labelDisplay"
			 color="#ffffff"
			 text="{hostComponent.label}"
			 textAlign="center"
			 verticalAlign="middle"
			 maxDisplayedLines="1"
			 rotation="0"
			 rotation.minimized="90"
			 horizontalCenter="-1"
			 left="2" right="2" top="6" bottom="30">
	</s:Label>
	
</s:Skin>
